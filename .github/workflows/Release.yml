name: .NET Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        os: [win]

    steps:
    - name: Get Version
      id: get_version
      uses: battila7/get-version-action@v2.2.1
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish -c release -o publish/${{ matrix.os }} --os ${{ matrix.os }} -p:Version=${{ steps.get_version.outputs.version-without-v }} --verbosity normal
    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.1
      with:
        # Filename for archive
        filename: ${{ github.event.repository.name }}-${{ matrix.os }}-${{ steps.get_version.outputs.version-without-v }}.zip
        # Base path for archive files
        path: ${{ matrix.os }}/*
        # Working directory before zipping
        directory: publish/
    - name: GH Release
      uses: softprops/action-gh-release@v0.1.14
      with:
        files: publish/*.zip
  
    - uses: kzrnm/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: YourProject/YourProject.csproj
      - run: echo "${{steps.get-version.outputs.version}}"
      - run: echo "${{steps.get-version.outputs.version-prefix}}" 
      - run: echo "${{steps.get-version.outputs.version-suffix}}" 
      - run: echo "${{steps.get-version.outputs.package-version}}" 
      - run: echo "${{steps.get-version.outputs.assembly-version}}" 
      - run: echo "${{steps.get-version.outputs.file-version}}" 
      - run: echo "${{steps.get-version.outputs.informational-version}}" 